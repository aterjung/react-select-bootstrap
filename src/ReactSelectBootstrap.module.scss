.react-select-indicators {
  & > div {
    color: #343a40;

    &:hover {
      color: #686868;
    }
  }
}

.react-select-control {
  font-family: $input-font-family;
  @include font-size($input-font-size);
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;
  appearance: none; // Fix appearance for date inputs in Safari
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius, 0);

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);


  .react-select__control {
    padding: $input-padding-y $input-padding-x;
  }

  .react-select__menu {
    top: 100%;
    position: absolute;
    width: 100%;
    z-index: 5;
    background-color: hsl(0, 0%, 100%);
    border-radius: 4px;
    box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1);
    margin-bottom: 8px;
    margin-top: 8px;
    box-sizing: border-box;
  }
  .react-select__option {
    cursor: pointer;
    display: block;
    @include rfs($dropdown-font-size, --#{$prefix}dropdown-font-size);
    width: 100%;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    color: $dropdown-link-color;
    padding: 8px 12px;
    box-sizing: border-box;
  }

  .react-select__option--is-focused {
    @extend .react-select__option;
    background-color: $dropdown-link-hover-bg;
    color: $dropdown-link-hover-color;
  }

  .react-select__option--is-selected {
    @extend .react-select__option;
    background-color: $component-active-bg;
    color: $component-active-color;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus-within {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }
}
